/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.js';
import type { AccountKeyLinkNetworkPropertiesDTO } from './AccountKeyLinkNetworkPropertiesDTO.js';
import {
    AccountKeyLinkNetworkPropertiesDTOFromJSON,
    AccountKeyLinkNetworkPropertiesDTOFromJSONTyped,
    AccountKeyLinkNetworkPropertiesDTOToJSON,
} from './AccountKeyLinkNetworkPropertiesDTO.js';
import type { AccountRestrictionNetworkPropertiesDTO } from './AccountRestrictionNetworkPropertiesDTO.js';
import {
    AccountRestrictionNetworkPropertiesDTOFromJSON,
    AccountRestrictionNetworkPropertiesDTOFromJSONTyped,
    AccountRestrictionNetworkPropertiesDTOToJSON,
} from './AccountRestrictionNetworkPropertiesDTO.js';
import type { AggregateNetworkPropertiesDTO } from './AggregateNetworkPropertiesDTO.js';
import {
    AggregateNetworkPropertiesDTOFromJSON,
    AggregateNetworkPropertiesDTOFromJSONTyped,
    AggregateNetworkPropertiesDTOToJSON,
} from './AggregateNetworkPropertiesDTO.js';
import type { HashLockNetworkPropertiesDTO } from './HashLockNetworkPropertiesDTO.js';
import {
    HashLockNetworkPropertiesDTOFromJSON,
    HashLockNetworkPropertiesDTOFromJSONTyped,
    HashLockNetworkPropertiesDTOToJSON,
} from './HashLockNetworkPropertiesDTO.js';
import type { MetadataNetworkPropertiesDTO } from './MetadataNetworkPropertiesDTO.js';
import {
    MetadataNetworkPropertiesDTOFromJSON,
    MetadataNetworkPropertiesDTOFromJSONTyped,
    MetadataNetworkPropertiesDTOToJSON,
} from './MetadataNetworkPropertiesDTO.js';
import type { MosaicNetworkPropertiesDTO } from './MosaicNetworkPropertiesDTO.js';
import {
    MosaicNetworkPropertiesDTOFromJSON,
    MosaicNetworkPropertiesDTOFromJSONTyped,
    MosaicNetworkPropertiesDTOToJSON,
} from './MosaicNetworkPropertiesDTO.js';
import type { MosaicRestrictionNetworkPropertiesDTO } from './MosaicRestrictionNetworkPropertiesDTO.js';
import {
    MosaicRestrictionNetworkPropertiesDTOFromJSON,
    MosaicRestrictionNetworkPropertiesDTOFromJSONTyped,
    MosaicRestrictionNetworkPropertiesDTOToJSON,
} from './MosaicRestrictionNetworkPropertiesDTO.js';
import type { MultisigNetworkPropertiesDTO } from './MultisigNetworkPropertiesDTO.js';
import {
    MultisigNetworkPropertiesDTOFromJSON,
    MultisigNetworkPropertiesDTOFromJSONTyped,
    MultisigNetworkPropertiesDTOToJSON,
} from './MultisigNetworkPropertiesDTO.js';
import type { NamespaceNetworkPropertiesDTO } from './NamespaceNetworkPropertiesDTO.js';
import {
    NamespaceNetworkPropertiesDTOFromJSON,
    NamespaceNetworkPropertiesDTOFromJSONTyped,
    NamespaceNetworkPropertiesDTOToJSON,
} from './NamespaceNetworkPropertiesDTO.js';
import type { SecretLockNetworkPropertiesDTO } from './SecretLockNetworkPropertiesDTO.js';
import {
    SecretLockNetworkPropertiesDTOFromJSON,
    SecretLockNetworkPropertiesDTOFromJSONTyped,
    SecretLockNetworkPropertiesDTOToJSON,
} from './SecretLockNetworkPropertiesDTO.js';
import type { TransferNetworkPropertiesDTO } from './TransferNetworkPropertiesDTO.js';
import {
    TransferNetworkPropertiesDTOFromJSON,
    TransferNetworkPropertiesDTOFromJSONTyped,
    TransferNetworkPropertiesDTOToJSON,
} from './TransferNetworkPropertiesDTO.js';

/**
 * Plugin related configuration properties.
 * @export
 * @interface PluginsPropertiesDTO
 */
export interface PluginsPropertiesDTO {
    /**
     * 
     * @type {AccountKeyLinkNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    accountlink?: AccountKeyLinkNetworkPropertiesDTO;
    /**
     * 
     * @type {AggregateNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    aggregate?: AggregateNetworkPropertiesDTO;
    /**
     * 
     * @type {HashLockNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    lockhash?: HashLockNetworkPropertiesDTO;
    /**
     * 
     * @type {SecretLockNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    locksecret?: SecretLockNetworkPropertiesDTO;
    /**
     * 
     * @type {MetadataNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    metadata?: MetadataNetworkPropertiesDTO;
    /**
     * 
     * @type {MosaicNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    mosaic?: MosaicNetworkPropertiesDTO;
    /**
     * 
     * @type {MultisigNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    multisig?: MultisigNetworkPropertiesDTO;
    /**
     * 
     * @type {NamespaceNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    namespace?: NamespaceNetworkPropertiesDTO;
    /**
     * 
     * @type {AccountRestrictionNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    restrictionaccount?: AccountRestrictionNetworkPropertiesDTO;
    /**
     * 
     * @type {MosaicRestrictionNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    restrictionmosaic?: MosaicRestrictionNetworkPropertiesDTO;
    /**
     * 
     * @type {TransferNetworkPropertiesDTO}
     * @memberof PluginsPropertiesDTO
     */
    transfer?: TransferNetworkPropertiesDTO;
}

/**
 * Check if a given object implements the PluginsPropertiesDTO interface.
 */
export function instanceOfPluginsPropertiesDTO(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PluginsPropertiesDTOFromJSON(json: any): PluginsPropertiesDTO {
    return PluginsPropertiesDTOFromJSONTyped(json, false);
}

export function PluginsPropertiesDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PluginsPropertiesDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountlink': !exists(json, 'accountlink') ? undefined : AccountKeyLinkNetworkPropertiesDTOFromJSON(json['accountlink']),
        'aggregate': !exists(json, 'aggregate') ? undefined : AggregateNetworkPropertiesDTOFromJSON(json['aggregate']),
        'lockhash': !exists(json, 'lockhash') ? undefined : HashLockNetworkPropertiesDTOFromJSON(json['lockhash']),
        'locksecret': !exists(json, 'locksecret') ? undefined : SecretLockNetworkPropertiesDTOFromJSON(json['locksecret']),
        'metadata': !exists(json, 'metadata') ? undefined : MetadataNetworkPropertiesDTOFromJSON(json['metadata']),
        'mosaic': !exists(json, 'mosaic') ? undefined : MosaicNetworkPropertiesDTOFromJSON(json['mosaic']),
        'multisig': !exists(json, 'multisig') ? undefined : MultisigNetworkPropertiesDTOFromJSON(json['multisig']),
        'namespace': !exists(json, 'namespace') ? undefined : NamespaceNetworkPropertiesDTOFromJSON(json['namespace']),
        'restrictionaccount': !exists(json, 'restrictionaccount') ? undefined : AccountRestrictionNetworkPropertiesDTOFromJSON(json['restrictionaccount']),
        'restrictionmosaic': !exists(json, 'restrictionmosaic') ? undefined : MosaicRestrictionNetworkPropertiesDTOFromJSON(json['restrictionmosaic']),
        'transfer': !exists(json, 'transfer') ? undefined : TransferNetworkPropertiesDTOFromJSON(json['transfer']),
    };
}

export function PluginsPropertiesDTOToJSON(value?: PluginsPropertiesDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountlink': AccountKeyLinkNetworkPropertiesDTOToJSON(value.accountlink),
        'aggregate': AggregateNetworkPropertiesDTOToJSON(value.aggregate),
        'lockhash': HashLockNetworkPropertiesDTOToJSON(value.lockhash),
        'locksecret': SecretLockNetworkPropertiesDTOToJSON(value.locksecret),
        'metadata': MetadataNetworkPropertiesDTOToJSON(value.metadata),
        'mosaic': MosaicNetworkPropertiesDTOToJSON(value.mosaic),
        'multisig': MultisigNetworkPropertiesDTOToJSON(value.multisig),
        'namespace': NamespaceNetworkPropertiesDTOToJSON(value.namespace),
        'restrictionaccount': AccountRestrictionNetworkPropertiesDTOToJSON(value.restrictionaccount),
        'restrictionmosaic': MosaicRestrictionNetworkPropertiesDTOToJSON(value.restrictionmosaic),
        'transfer': TransferNetworkPropertiesDTOToJSON(value.transfer),
    };
}

