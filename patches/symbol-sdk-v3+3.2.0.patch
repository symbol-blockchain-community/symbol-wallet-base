diff --git a/node_modules/symbol-sdk-v3/package.json b/node_modules/symbol-sdk-v3/package.json
index 8490703..1b2dae8 100644
--- a/node_modules/symbol-sdk-v3/package.json
+++ b/node_modules/symbol-sdk-v3/package.json
@@ -8,14 +8,17 @@
   "exports": {
     ".": {
       "default": "./src/index.js",
+      "import": "./src/index.js",
       "types": "./ts/src/index.d.ts"
     },
-    "./nem": {
+    "./src/nem": {
       "default": "./src/nem/index.js",
+      "import": "./src/nem/index.js",
       "types": "./ts/src/nem/index.d.ts"
     },
-    "./symbol": {
+    "./src/symbol": {
       "default": "./src/symbol/index.js",
+      "import": "./src/symbol/index.js",
       "types": "./ts/src/symbol/index.d.ts"
     }
   },
diff --git a/node_modules/symbol-sdk-v3/src/impl/ed25519.js b/node_modules/symbol-sdk-v3/src/impl/ed25519.js
index a4de911..e76b4f2 100644
--- a/node_modules/symbol-sdk-v3/src/impl/ed25519.js
+++ b/node_modules/symbol-sdk-v3/src/impl/ed25519.js
@@ -1,7 +1,6 @@
 // this file contains implementation details and is not intended to be used directly
 
 import ed25519_js from './ed25519_js.js';
-import ed25519_wasm from './ed25519_wasm.js';
 
 let ed25519;
 export default {
@@ -10,7 +9,7 @@ export default {
 		//    in those cases, default to JS-implementation
 		// 2. for testing, check environment variable to force JS-implementation
 		if (!ed25519)
-			ed25519 = globalThis.WebAssembly && !process.env.SYMBOL_SDK_NO_WASM ? ed25519_wasm : ed25519_js;
+			ed25519 = ed25519_js;
 
 		return ed25519;
 	},
diff --git a/node_modules/symbol-sdk-v3/src/impl/ed25519_wasm.js b/node_modules/symbol-sdk-v3/src/impl/ed25519_wasm.js
deleted file mode 100644
index e0cb407..0000000
--- a/node_modules/symbol-sdk-v3/src/impl/ed25519_wasm.js
+++ /dev/null
@@ -1,26 +0,0 @@
-// this file contains implementation details and is not intended to be used directly
-
-/* eslint-disable import/no-extraneous-dependencies */
-import {
-	HashMode, crypto_private_sign, crypto_private_verify, crypto_sign_keypair
-} from 'symbol-crypto-wasm-node';
-/* eslint-enable import/no-extraneous-dependencies */
-
-const CRYPTO_SIGN_BYTES = 64;
-const CRYPTO_SIGN_PUBLICKEYBYTES = 32;
-
-const ed25519 = {
-	keyPairFromSeed: (hashMode, seed) => {
-		const publicKey = new Uint8Array(CRYPTO_SIGN_PUBLICKEYBYTES);
-		crypto_sign_keypair(HashMode[hashMode], seed, publicKey);
-		return { publicKey, privateKey: seed };
-	},
-	sign: (hashMode, message, keyPair) => {
-		const signature = new Uint8Array(CRYPTO_SIGN_BYTES);
-		crypto_private_sign(HashMode[hashMode], keyPair.privateKey, message, signature);
-		return signature;
-	},
-	verify: (hashMode, message, signature, publicKey) => crypto_private_verify(HashMode[hashMode], publicKey, message, signature)
-};
-
-export default ed25519;
